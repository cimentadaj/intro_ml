renv::init()
filter
fixed
margin
3/4
split_pisa
pisa_train
pisa_test
pisa_train
pisa_train
pisa_train
pisa_recipe
1797482858 / 1000
pryr::mem_used()
renv::deactivate()
pryr::mem_used()
renv::activate()
pryr::mem_used()
pisa
pisa %>% count(ALB)
pisa %>% count(CNTRYID)
pisa %>% count(CNTRYID) %>% arrange(desc(n))
pisa_sp
pisa
pryr::object_size(pisa)
pisa %>% count(CNTRYID)
pisa %>% count(CNTRYID) %>% arrange(desc(n))
pisa %>% count(CNTRYID) %>% arrange(n)
pisa
names(pisa)
matches
rlang::last_error()
split_pisa
ggplot(pisa_train, aes(math_score)) + geom_histogram()
ggplot(pisa_train, aes(math_score)) + geom_histogram(bins = 1000)
ggplot(pisa_train, aes(math_score)) + geom_histogram(bins = 500)
ncol(pisa_train)
tst
tst
tst
prepped_pisa
ridge_reg
m1
ridge$fit
ridge$fit$lambda
ridge
tune
tidymodels::tidymodels_packages()
merge
merge
methods(merge)
class(linear_reg(penalty = varying(), mixture = varying()))
ridge
merge(ridge)
tidymodels::pkg_deps()
tidymodels::tidymodels_update()
tidymodels::tag_show()
tidymodels::tag_update()
trees
mod_obj
trees()
trees() %>% range_set(c(1, 50))
sample_size()
merge
bst_grid
devtools::install_github("tidymodels/tune")
devtools::install_github("tidymodels/tune")
1
devtools::install_github("tidymodels/tune")
1
devtools::install_github("tidymodels/tune")
2
devtools::install_github("tidymodels/tune")
3
renv::install("tidymodels/tune")
s
grid_regular
tune::penalty
penalty
mixture
iono_rs
show_best
class(grid_form)
iono_rs
class(iono_rs)
bootstraps
new_rset
rsample::new_rset
rsample:::new_rset
rsample:::add_class
rsample:::print.bootstraps
rsample:::pretty
rsample:::pretty.bootstraps
class(iono_rs)
df_all
df_train_cv
tune_grid
tune_grid.recipe
tune:::tune_grid.recipe
splits
df_train_cv
une_cv
tuned_cv
?tune::finalize_workflow
pisa_recipe
grid_regular(penalty(), mixture(), levels = c(10, 10)) %>% distinct(mixture)
pisa_cv
mod1
grid_vals
tuned_mod1
rmse
yardstick:::rmse.data.frame
>foreach::foreach
?foreach::foreach
?foreach::foreach
tuned_mod1
extract_model
tuned_mod1 %>% select(.extracts)
tuned_mod1 %>% select(.extracts) %>% slice(1)
tuned_mod1 %>% select(.extracts) %>% slice(1) %>% pull9
tuned_mod1 %>% select(.extracts) %>% slice(1) %>% pull()
tuned_mod1
tuned_mod1
tuned_mod1
tuned_mod1 %>% select(.extracts)
tuned_mod1 %>% select(.extracts) %>% pull(.extracts)
tuned_mod1 %>% select(.extracts) %>% pull(.extracts) %>% .[[1]]
tuned_mod1 %>% select(.extracts) %>% pull(.extracts) %>% .[[1]] %>% select(.extracts)
tuned_mod1 %>% select(.extracts) %>% pull(.extracts) %>% .[[1]] %>% select(.extracts) %>% unnest()
tuned_mod1 %>% select(.extracts) %>% pull(.extracts) %>% .[[1]] %>% select(.extracts)
tuned_mod1 %>% select(.extracts) %>% pull(.extracts) %>% .[[1]] %>% select(.extracts) %>% slice(1)
tuned_mod1 %>% select(.extracts) %>% pull(.extracts) %>% .[[1]] %>% select(.extracts) %>% slice(1) %>% pull(.extracts)
tuned_mod1 %>% select(.extracts) %>% pull(.extracts)
tuned_mod1
?tune:::autoplot.tune_results
?tune:::autoplot
collect_metrics(tuned_mod1)
pisa_test
lm_mod
lm_mod_test
lm_mod_test
lm_mod
lm_mod$fit
rmse
rsq
r2
r2(lm_mod$fit)
r2(lm_mod_test$fit)
performance:::r2.lm
mtcars
df
df
has_role
step_center
recipe::add_step
recipe:::add_step
recipes:::add_step
recipes:::ellipse_check
recipes:::step_center_new
rlang::last_error
rlang::last_error()
rm(all_numeric)
pisa_recipe
juice(pisa_recipe)
pisa_recipe
juice(pisa_recipe)
pisa_train
juice(pisa_recipe)
pisa_recipe
pisa_recipe$var_info
pisa_recipe$var_info$variable
pisa_train %>% select(pisa_recipe$var_info$variable)
juice(pisa_recipe)
juice(pisa_recipe)
pisa_train %>% select(pisa_recipe$var_info$variable)
iris
iris
tst
tst$var_info
pisa_recipe
juice(pisa_recipe)
juice(pisa_recipe)
devtools::install_github("tidymodels/workflows")
mod1
workflow
add_Recipe
add_recipe
add_model
res
class(  workflow() %>%
  add_recipe(pisa_recipe) %>%
  add_model(lm_mod)
class(  workflow() %>%
  add_recipe(pisa_recipe) %>%
  add_model(lm_mod))
fit.workflow
parsnip:::fit.workflow
parsnip:::fit.model_spec
juice(pisa_recipe)
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice() %>% select(matches("IMMIG"))
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice() %>% count(IMMIG)
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_train %>% select(IMMIG)
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe
pisa_recipe %>% prep() %>% juice()
dplyr::mutate
pisa_recipe
pisa_recipe
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe
pisa_recipe %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep()
pisa_recipe %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice() %>% count(STUBMI)
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice() %>% pull(MISCED)
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
rlang::last_error()
pisa_recipe %>% prep() %>% juice()
pisa_recipe %>% prep() %>% juice()
library(perccalc)
install.packages("perccalc")
library(perccalc)
library(perccalc)
rlang::last_error()
library(perccalc)
perccalc::pisa_2012
as_tibble(perccalc::pisa_2012)
pisa_train
pisa_train
bake(pisa_recipe)
prep(pisa_recipe)
bake(prep(pisa_recipe))
juic(prep(pisa_recipe))
juice(prep(pisa_recipe))
juice(prep(pisa_recipe))
pisa_recipe
prep(pisa_recipe)
juice(prep(pisa_recipe))
pisa_train %>% select(REPEAT)
juice(prep(pisa_recipe))
pisa_train %>% select(REPEAT)
pisa_train %>% select(REPEAT)
juice(prep(pisa_recipe))
summary(pisa_recipe)
pisa
class(pisa$CNTRYID)
class(pisa$CNTRYID)
pisa
summary(pisa_recipe)
prep(pisa_recipe)
juice(prep(pisa_recipe))
pisa_recipe
prep(pisa_recipe)
prep(training = pisa_recipe)
prep(pisa_recipe)
pisa_train
rlang::last_error()
pisa_recipe
prep(pisa_recipe)
prep(pisa_recipe)
juice(prep(pisa_recipe))
prep(pisa_recipe)
prep(pisa_recipe)
rec
prep(impute_rec)
credit_tr
as_tibble(credit_tr)
prep(impute_rec)
pisa_recipe
prep(pisa_recipe)
prep(pisa_recipe)
juice(prep(pisa_recipe))
juice(prep(pisa_recipe, strings_as_factors = FALSE))
juice(prep(pisa_recipe, strings_as_factors = FALSE))
pisa_recipe
summary(pisa_recipe)
pisa_recipe
summary(pisa_recipe)
summary(pisa_recipe)
pisa_recipe
haven::is.labelled
s1
s2
s3
x
zap_labels(s1)
pisa
pisa_train
summary(pisa_recipe)
summary(pisa_recipe)
prep(pisa_recipe, strings_as_factors = FALSE)
juice(prep(pisa_recipe, strings_as_factors = FALSE))
prep(pisa_recipe)
options(stringsAsFactors = FALSE)
juice(prep(pisa_recipe))
prep
class(  pisa_train %>% 
  recipe(math_score ~ MISCED + FISCED + HISEI + REPEAT + IMMIG + DURECEC + BSMJ + STUBMI, data = .))
prep.recipe
recipes:::prep.recipe
options(stringsAsFactors)
options("stringsAsFactors")
?prep
tibble::tibble
pisa_recipe
juice(pisa_recipe)
pisa_recipe
res_wd
res_f
res_wf
pisa
pisa
install.packages("here")
pryr::object_size(pisa)
pisa
pisa_us
pisa_us_ready
pisa_us_ready
head(wiki_dt)
dim(wiki_dt)
names(wiki_dt)
names(wiki_dt) %>% cat(sep = "\n")
names(wiki_dt) %>% paste0("* ", .) %>% cat(sep = "\n")
head(wiki_dt)
wiki_dt %>% select(pageviews_offset)
wiki_dt %>% select(author_editcount)
wiki_dt %>% select(latino)
wiki_dt %>% select(no_schooling_completed)
wiki_dt %>% select(internet_usage)
wiki_dt %>% select(author_editcount)
wiki_dt %>% select(editors)
